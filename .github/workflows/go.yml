name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
    
    - name: Set up gcloud Cloud SDK environment
        # You may pin to the exact commit or the version.
        # uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
          # Version of the gcloud SDK to install. If unspecified or set to "latest",
      #the latest available gcloud SDK version for the target platform will be
      #installed. Example: "290.0.1".
          version: latest # optional, default is latest
          # Service account email address to use for authentication. This is required
      #for legacy .p12 keys but can be omitted for .json keys. This is usually of
      #the format <name>@<project-id>.iam.gserviceaccount.com.
          service_account_email: gothic-avenue-319909@appspot.gserviceaccount.com # optional
          # Service account key to use for authentication. This should be the JSON
      #formatted private key which can be exported from the Cloud Console. The
      #value can be raw or base64-encoded.
          #service_account_key: 102179839364246122584 # optional
          # ID of the Google Cloud project. If provided, this will configure gcloud to
      #use this project ID by default for commands. Individual commands can still
      #override the project using the --project flag which takes precedence.
          project_id: gothic-avenue-319909 # optional
          # Export the provided credentials as Google Default Application Credentials.
      #This will make the credentials available to later steps via the
      #GOOGLE_APPLICATION_CREDENTIALS environment variable. Future steps that
      #consume Default Application Credentials will automatically detect and use
      #these credentials.
          #export_default_credentials: # optional
           
    - name: Initialize Google Cloud SDK
      uses: zxyle/publish-gae-action@master
      with:
        service_account_email: danilo@graziano.digital
        service_account_key: 102179839364246122584
        project_id: gothic-avenue-319909
        #components: google-cloud-sdk-app-engine-go
        # An optional variables parameter can be used
        #gae_variables: ${{ secrets.GAE_VARIABLES }}

    - name: Publish app to Google App Engine
      run: |
        # This client-secret.json is converted by GCP_SA_KEY.
        #sudo apt-get install google-cloud-sdk-app-engine-go
        gcloud auth activate-service-account gothic-avenue-319909@appspot.gserviceaccount.com --key-file=gothic-avenue-319909-1f0f50c52768.json
        gcloud config set project gothic-avenue-319909
        gcloud -q app deploy app.yaml --promote

        # Suppose you need a cron task.
        gcloud -q app deploy cron.yaml
        

      
